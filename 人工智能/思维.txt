http://zhidao.baidu.com/question/51719300.html?fr=qrl
http://zhidao.baidu.com/question/67972406.html?si=10
http://msdn.microsoft.com/zh-cn/library/ms228768(VS.80).aspx
http://www.cnblogs.com/Terrylee/archive/2006/10/25/ASPNET_AJAX_ScriptManager.html
http://www.cnblogs.com/Terrylee/archive/2006/11/12/ASPNET_AJAX_QuickStarts.html


来自 udp port scan 的网络攻击

----易恒固瞬（事物总是处于变化之中的，补充，而且正是不断变化的过程才使得相关意义显现，参见另一至理）



----矛盾无处不在（太极周易里也有此观点，叫孤阴不生,孤阳不长,阴阳常伴相随。而且阴蕴含着阳，阳也可变出阴，成语‘否极泰来’就是这个意思，在系统中，成长力与破坏力总是同时存在的，而且其力量大小是不停在变动的。）

----不识庐山真面目，只缘身在此山中（有时候我们无法解决问题，是因为被所处的系统限制住了，如果能跳出系统，在更高的层面上看待问题，则会别有一番收获）

----意义在过程中显现

----有变化，就有意义，永恒，也即寂灭。





……000000000000000000000000000000000000000000000000……………………（无意义）
……111111111111111111111111111111111111111111111111………………………（也无意义）
……0000000000000000000000000000000000000001000000000000000000…………（意义在于 0->1 ->0）
……11111111111111111111111111111111111101111111111111111111111111111…………（意义在于 1->0 ->1）
………01111001110111111111100000000001111010111011101110111…（有意义，而且根据释读的层次不同，意义也不同）
………00000000 0000000  00000  0 000000000 000000000 0000000000 00………………………（有意义，取决于释读的层次/方法）
----完美是不存在的，万事万物终有其局限性所在。（局限性：也可认为缺陷性。这句话哥德尔定理有异曲同工之处。 ）


---[猜想理论]智能的程度与智能的计算空间成正比，与计算时间成反比 bit/second (比特/秒)   智能值的计算 AI = Good（AI） + bad(AI) /2 (初步  )

--遗忘与遗弃是有意义的，无论是主动或被动。因为存储空间并非无限，即使不考虑存储限制，也需要考虑过大的数据处理所需要消耗的时间代价，同理，在数据空间里尝试搜索正确的答案时，应该有一个时间限制，超过限制后则应该主动放弃搜索。  时间是宝贵的资源。


----模糊，就是以抛弃细节为代价换取对全局的把握。 智人所进行的概念概括，组词，组句，思维/语言组块 的这些种种行为其实都是一种模糊化行为，与之相对的，就是精细化行为。当需要对细节进一步把握时才会运用细化功能。模糊化表示概念的向上收缩提升，精细化表示概念的向下扩展落降



人类的语言是模糊的不精确的，这是为了追求最大程度的完备性而不得不引入的不一致性。模糊语言是允许矛盾的存在的。

相比之下，计算机语言就是精确的，为了追求一致性的效果，放弃了完备性的实现（当然，在一定范围内可以认为是完备的。），所以，使用程序语言的表达能力是有限的，同时也是无法完善的描述现实世界的所有情况的。


【要达到的功能】

当我说出“基于数据库dbsystem中的person表生成对应的person对象”这句话后，智能程序能够

在这句话中提取以下的信息，
  1.首要关注点/关键字 是“数据库，表 ，对象”（这些词语是名词），
  2.其次是“基于”，“生成”（这两个词语是动词），
  3.然后是其他的一些限定信息如“数据库的名称，表名称，要生成的对象名称……”等等，

    详细的限定信息随着程序的知识库的增加而越加繁杂，比如，对于对象，更多的限定信息除了“对象名称”以外，还可以有“对象的作用域，对象的时效性……”等等，对于“数据库”，则有“数据库的类型（sql or oracle），数据库连接信息……”等等，

  详细限定信息可以有很多很多（规则库，规则集，这些都应该属于知识模型里面某个子集），程序首先从 明文中获取详细限定信息，其次从上下文环境中获取详细限定信息，然后再通过某些规则推导出信息（众多规则中包含一个“在某种情况下的默认值是什么”这个规则）


(题外话:智能程序的所有行为都不是固定的，而是能够灵活变通改变的，比如上面获取详细限定信息的方式也就不局限于本文介绍出的那几种方式与固定的顺序，我们允许智能程序在实际运行中能够通过“自省”这种方式来优化自己的信息提取模式。这个目标的实现涉及到了关于程序如何实现“自省”，在此不赘述)

【如何实现】

大家可以看到，为了能够让智能程序理解我说的一句简单的话，智能程序本身的实现是多么的复杂，因为它需要：
   1.有自然语言理解的能力（我们暂不说让它拥有理解错别字，歧义句的能力，目前就仅让它能够理解最简单严格的正确语义的句子。） ，为了理解自然语言，就会使用多种技术，包括关键的模式识别，语意层次模型建构，分词技术等，

   2.对相关问题域的知识模型的了解与建构能力。
      对相关问题域的知识模型的了解---关系到专家系统，知识表示等等。在本例子中则为 关于数据库方面的诸多知识，关于要生成的对应的东西的（面向对象领域中的对象概念）的知识模型。

      对相关问题域的知识模型的建构能力---关系到知识推导，启发。详细来说，就是如何在不知道应该怎么去解决问题的情况下尝试着找出问题的解决方式（当然，程序直接与人交流向人询问也是一种方式之一，其它的还有上网搜索等等，）而且，一旦成功解决了问题，则应该把解决此问题的经验保存起来以供下次遇到相同或类似的问题时能够灵活使用这个对应的经验/模式来解决同样问题。


【底层实现设计】

------------------------------------





【X】表示X是一个概念性指称
<str>表示使前面所描述的针对此概念的特性成立的规则范畴
定义元概念与元操作
无 --表示没有的概念
有 --表示存在的概念

所有的概念都可以从元概念衍生出来，当然，衍生出来的概念都带有一定成都的限制性


元操作
~ --表示相反
= --表示相等，及等号左边的概念与等号右边的概念是同一的
	如 无 = 无
      
---------
无 = ~有
(x = ~y )=>  (~x= y)

对数量的理解。

主体与客体的理解 (我/你/它/的概念，第一人称第二人称第三人称)
存在性的理解，（有无的概念）
延续性的理解 （数字的后继与前趋，事物的发展，状态的变化，因果关系）

0 表示没有，不存在。

【1】 |表示有，存在。|【0】 的【后继】<【自然数】>|数量<【有】>|
